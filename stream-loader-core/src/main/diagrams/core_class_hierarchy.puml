@startuml
skinparam backgroundColor transparent

hide empty members

class StreamLoader [[../com/adform/streamloader/StreamLoader.html{StreamLoader}]] {
 start()
 stop()
}

class KafkaSource [[../com/adform/streamloader/source/KafkaSource.html{KafkaSource}]] {
  poll(): Kafka records
}

StreamLoader *-- KafkaSource
StreamLoader *-- Sink

interface Sink [[../com/adform/streamloader/sink/Sink.html{Sink}]] {
  initialize(kafkaContext)
  assignPartitions(partitions): committed stream positions
  revokePartitions(partitions): committed stream positions
  write(record)
  heartbeat()
  close()
}

Sink <|-- RecordBatchingSink

class RecordBatchingSink [[../com/adform/streamloader/sink/batch/RecordBatchingSink.html{RecordBatchingSink}]] {
  partitionGrouping: TopicPartition => String
}

interface RecordBatcher [[../com/adform/streamloader/sink/batch/RecordBatcher.html{RecordBatcher}]] {
  newBatchBuilder()
}

interface RecordBatchStorage [[../com/adform/streamloader/sink/batch/storage/RecordBatchStorage.html{RecordBatchStorage}]] {
  initialize(kafkaContext)
  recover()
  commitBatch(batch, offsets)
  committedPositions(partitions): stream positions
}

RecordBatchingSink *-- RecordBatcher
RecordBatchingSink *-- RecordBatchStorage

RecordBatchStorage <|-- InDataOffsetRecordBatchStorage
RecordBatchStorage <|-- TwoPhaseCommitRecordBatchStorage

abstract class InDataOffsetRecordBatchStorage [[../com/adform/streamloader/sink/batch/storage/InDataOffsetRecordBatchStorage.html{InDataOffsetRecordBatchStorage}]] {
  storeBatch(batch)
}

abstract class TwoPhaseCommitRecordBatchStorage [[../com/adform/streamloader/sink/batch/storage/TwoPhaseCommitRecordBatchStorage.html{TwoPhaseCommitRecordBatchStorage}]] {
  stageBatch(batch): staging
  storeBatch(staging)
}

class FileRecordBatcher [[../com/adform/streamloader/sink/file/FileRecordBatcher.html{FileRecordBatcher}]] {
}

RecordBatcher <|-- FileRecordBatcher

interface FileBuilder [[../com/adform/streamloader/sink/file/FileBuilder.html{FileBuilder}]] {
  write(record)
  build(): Option[File]
}

class CsvFileBuilder [[../com/adform/streamloader/sink/encoding/csv/CsvFileBuilder.html{CsvFileBuilder}]]

FileBuilder <|-- CsvFileBuilder

FileRecordBatcher *-- FileBuilder
FileRecordBatcher *-- RecordFormatter

class RecordFormatter [[../com/adform/streamloader/sink/batch/RecordFormatter.html{RecordFormatter}]] {
  format(record): Seq[Record]
}

@enduml
